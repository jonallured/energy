diff --git a/node_modules/react-native-collapsible-tab-view/lib/typescript/index.d.ts b/node_modules/react-native-collapsible-tab-view/lib/typescript/index.d.ts
index 2c2005e..00bece6 100644
--- a/node_modules/react-native-collapsible-tab-view/lib/typescript/index.d.ts
+++ b/node_modules/react-native-collapsible-tab-view/lib/typescript/index.d.ts
@@ -16,12 +16,24 @@ export declare const Tabs: {
         cancelLazyFadeIn?: boolean | undefined;
         children: import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)>;
     }>;
+	/**
+	 * @deprecated
+	 * Use `TabsFlatList` instead.
+	 */
     FlatList: <T>(p: import("react-native").FlatListProps<T> & {
         ref?: ((instance: import("react-native").FlatList<T> | null) => void) | import("react").RefObject<import("react-native").FlatList<T>> | null | undefined;
     }) => import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)>;
-    ScrollView: import("react").ForwardRefExoticComponent<Pick<import("react-native").ScrollViewProps, "horizontal" | "pagingEnabled" | "showsHorizontalScrollIndicator" | "keyboardShouldPersistTaps" | "removeClippedSubviews" | "fadingEdgeLength" | "onLayout" | "contentContainerStyle" | "invertStickyHeaders" | "keyboardDismissMode" | "onContentSizeChange" | "onScrollBeginDrag" | "onScrollEndDrag" | "onMomentumScrollEnd" | "onMomentumScrollBegin" | "scrollEnabled" | "showsVerticalScrollIndicator" | "style" | "refreshControl" | "snapToAlignment" | "snapToInterval" | "snapToOffsets" | "snapToStart" | "snapToEnd" | "disableIntervalMomentum" | "disableScrollViewPanResponder" | "hitSlop" | "pointerEvents" | "testID" | "nativeID" | "collapsable" | "needsOffscreenAlphaCompositing" | "renderToHardwareTextureAndroid" | "focusable" | "shouldRasterizeIOS" | "isTVSelectable" | "hasTVPreferredFocus" | "tvParallaxProperties" | "tvParallaxShiftDistanceX" | "tvParallaxShiftDistanceY" | "tvParallaxTiltAngle" | "tvParallaxMagnification" | "onStartShouldSetResponder" | "onMoveShouldSetResponder" | "onResponderEnd" | "onResponderGrant" | "onResponderReject" | "onResponderMove" | "onResponderRelease" | "onResponderStart" | "onResponderTerminationRequest" | "onResponderTerminate" | "onStartShouldSetResponderCapture" | "onMoveShouldSetResponderCapture" | "onTouchStart" | "onTouchMove" | "onTouchEnd" | "onTouchCancel" | "onTouchEndCapture" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityComponentType" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityTraits" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "alwaysBounceHorizontal" | "alwaysBounceVertical" | "automaticallyAdjustContentInsets" | "bounces" | "bouncesZoom" | "canCancelContentTouches" | "centerContent" | "contentInset" | "contentOffset" | "contentInsetAdjustmentBehavior" | "decelerationRate" | "directionalLockEnabled" | "indicatorStyle" | "maximumZoomScale" | "minimumZoomScale" | "onScrollAnimationEnd" | "pinchGestureEnabled" | "scrollEventThrottle" | "scrollIndicatorInsets" | "scrollToOverflowEnabled" | "scrollsToTop" | "onScrollToTop" | "stickyHeaderIndices" | "zoomScale" | "endFillColor" | "scrollPerfTag" | "overScrollMode" | "nestedScrollEnabled" | "persistentScrollbar"> & {
+	/**
+	 * @deprecated
+	 * Use `TabsScrollView` instead.
+	 */
+    ScrollView: import("react").ForwardRefExoticComponent<Omit<import("react-native").ScrollViewProps, "onScroll"> & {
         children?: import("react").ReactNode;
     } & import("react").RefAttributes<import("react-native").ScrollView>>;
+	/**
+	 * @deprecated
+	 * Use `TabsSectionList` instead.
+	 */
     SectionList: <T_1>(p: import("react-native").SectionListProps<T_1> & {
         ref?: ((instance: import("react-native").SectionList<T_1> | null) => void) | import("react").RefObject<import("react-native").SectionList<T_1>> | null | undefined;
     }) => import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)>;
